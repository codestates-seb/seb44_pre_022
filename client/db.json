{
  "posts": [
    {
      "title": "",
      "content": "",
      "tags": [],
      "answers": [],
      "comments": [],
      "id": 0
    },
    {
      "title": "예시입니다",
      "content": "예시입니다 . 이부분은 추후에 다시 바꾸겠습니다 ! \ntag는 입력후 엔터를 치면 자동 생성됩니다 ",
      "tags": ["tag", "javascript"],
      "answers": [],
      "comments": [],
      "id": 1
    },
    {
      "title": "질문있습니다 ! ",
      "content": "질문있습니다 !! ",
      "tags": ["react", "typescript", "so", "hard"],
      "answers": [],
      "comments": [],
      "id": 2
    },
    {
      "title": "Python에서 파일을 읽고 쓰는 방법에 대해 알려주세요",
      "content": "안녕하세요. Python 초보 개발자입니다. 파일을 읽고 쓰는 방법에 대해 궁금합니다.\n\n예를 들어, \"data.txt\"라는 파일을 읽어와서 내용을 출력하거나, 새로운 파일을 만들어서 내용을 저장하는 방법을 알고 싶습니다. 또한, 파일에 데이터를 추가하는 방법도 알고 싶습니다. 어떤 방식을 사용해야 할까요? 가능한 예시와 함께 자세히 설명해주세요.\n\n감사합니다.",
      "tags": ["python", "txt"],
      "comments": [
        "Python 말고 JavaScript 쓰세요",
        "JavaScript 말고 TypeScript 쓰세요",
        "TypeScript 말고 COBOL 쓰세요",
        "COBOL 말고 어셈블리어 쓰세요",
        "어셈블리어 말고 기계어 쓰세요",
        "그만해 이 양반들아"
      ],
      "answers": [
        {
          "content": "안녕하세요. 파이썬 파일 읽고 쓰는 방법에 대해 궁금해하시는군요.\n\n파이썬에서 파일을 읽고 쓰는 방법은 여러 가지가 있는데, 가장 일반적인 방법은 `open()` 함수를 사용하는 것입니다. `open()` 함수는 파일을 열고 읽거나 쓰기 위한 파일 객체를 반환합니다. 파일 객체를 생성한 후에는 `read()` 함수를 사용하여 파일의 내용을 읽고, `write()` 함수를 사용하여 파일에 내용을 씁니다.\n\n예를 들어, `data.txt` 파일을 읽어와서 내용을 출력하려면 다음과 같은 코드를 사용할 수 있습니다.\n\n```python\nwith open(\"data.txt\", \"r\") as f:\n    contents = f.read()\n    print(contents)\n```\n\n`with` 문은 파일을 열고 닫는 것을 자동으로 처리하므로 파일을 열고 닫는 코드를 따로 작성할 필요가 없습니다. `open()` 함수는 두 개의 인수를 받습니다. 첫 번째 인수는 파일의 이름이고, 두 번째 인수는 파일의 모드입니다. 모드는 파일을 읽기(`r`), 쓰기(`w`), 추가(`a`)로 지정할 수 있습니다.\n\n파일에 데이터를 추가하려면 `write()` 함수를 사용합니다. `write()` 함수는 파일에 문자열을 씁니다. 예를 들어, `data.txt` 파일에 \"Hello, world!\"라는 문자열을 추가하려면 다음과 같은 코드를 사용할 수 있습니다.\n\n```python\n    with open(\"data.txt\", \"a\") as f:\n    f.write(\"Hello, world!\")\n```\n\n파일을 읽고 쓰는 방법에 대한 자세한 내용은 파이썬 공식 문서를 참조하세요.\n\n```\nhttps://docs.python.org/3/tutorial/inputoutput.html\n```\n\n감사합니다.\n",
          "comments": []
        },
        {
          "content": "파일을 읽고 쓰는 방법에 대해 알려드리겠습니다. Python에서는 내장된 open() 함수를 사용하여 파일을 열고 다양한 작업을 할 수 있습니다.\n1. 파일 읽기:\n   파일을 읽기 위해서는 open() 함수를 사용하여 파일을 열고, read() 메서드를 호출하여 파일 내용을 읽습니다. 아래는 예시 코드입니다.\n   ```python\n   file = open(\"data.txt\", \"r\")  # 파일을 읽기 모드로 열기\n   content = file.read()  # 파일 내용 읽기\n   print(content)  # 파일 내용 출력\n   file.close()  # 파일 닫기\n   ```\n\n2. 파일 쓰기:\n   새로운 파일을 생성하거나 기존 파일을 덮어쓰기 위해서는 open() 함수를 사용하고, write() 메서드를 호출하여 내용을 작성합니다. 아래는 예시 코드입니다.\n\n   ```python\n   file = open(\"new_file.txt\", \"w\")  # 파일을 쓰기 모드로 열기\n   content = \"Hello, world!\"  # 저장할 내용\n   file.write(content)  # 파일에 내용 작성\n   file.close()  # 파일 닫기\n   ```\n\n3. 파일에 데이터 추가하기:\n   기존 파일에 내용을 추가하기 위해서는 open() 함수를 사용하고, write() 메서드를 호출하여 내용을 작성합니다. 단, 파일을 쓰기 모드(\"w\")로 열게 되면 기존 내용이 모두 사라지므로 주의해야 합니다. 아래는 예시 코드입니다.\n   ```python\n   file = open(\"existing_file.txt\", \"a\")  # 파일을 추가 모드로 열기\n   content = \"Additional content.\"  # 추가할 내용\n   file.write(content)  # 파일에 내용 추가\n   file.close()  # 파일 닫기\n   ```",
          "comments": []
        }
      ],
      "id": 3
    }
  ],
  "comments": [
    {
      "id": 1,
      "body": "some comment",
      "postId": 1
    }
  ],
  "profile": {
    "name": "typicode"
  }
}
